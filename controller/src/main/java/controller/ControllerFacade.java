package controller;import model.IMap;import model.IModel;import view.IView;import java.io.IOException;import java.sql.SQLException;/** * <h1>The Class ControllerFacade provides a facade of the Controller component.</h1> * * @author Jean-Aymeric DIET jadiet@cesi.fr * @version 1.0 */public class ControllerFacade implements IController, OrderPerformerable {    /**     * The model.     */    private final IModel model;    /**     * The view.     */    private IView view;    private Build build;    /**     * Instantiates a new controller facade.     *     * @param model the model     */    public ControllerFacade(final IModel model) throws IOException {        this.model = model;    }    public void setView(final IView view) {        this.view = view;    }    /**     * Start.     *     * @throws SQLException the SQL exception     */    public void start() throws IOException {        build = new Build(view, model);        MainController main = new MainController(model);        main.test();        while(true) {            build.calculateMap();            try {                Thread.sleep(500);            } catch (InterruptedException e) {                e.printStackTrace();            }        }    }    @Override    public void orderPerformer(UserOrderable userOrder) {        int x = build.getPosX();        int y = build.getPosY();        switch (userOrder.getOrder()) {            case UP:                y+=16;                break;            case DOWN:                y-=16;                break;            case LEFT:                x+=16;                break;            case RIGHT:                x-=16;                break;        }        build.setPos(x,y);    }    @Override    public IMap getTheMap() {        return null;    }}